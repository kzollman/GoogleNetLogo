#
# This was modified from ElastiCluster example: SLURM cluster with GPUs on Google Cloud
#
# My goal is a simple SLURM deployment on GCP (no gpus needed).  Hopefully I didn't fuck anything up
#


# SLURM software to be configured by Ansible
#
# (There is nothing Google-specific in the "setup" section; in fact, it can be
# re-used verbatim with *any* cloud provider or base image)

[setup/slurm]
provider=ansible
frontend_groups=slurm_master
compute_groups=slurm_worker

[setup/ansible]
ansible_forks=20
ansible_timeout=200

# Create a cloud provider (call it "google-cloud")

[cloud/google-cloud]
provider=google
noauth_local_webserver=True
gce_project_id=networkepistemology
gce_client_id=851073133748-70vn6lno391eqro1rugcmlnoi2s12q0j.apps.googleusercontent.com
gce_client_secret=C0hSZ31jqOzJZvQDPXbHsCLh


# Create a login (call it "google-login")
#
# In contrast to other cloud providers, GCE creates a personal account on each
# VM so you effectively re-use the same `[login/google]` section across
# different VM images.
[login/google-login]
image_user=kzollman
image_user_sudo=root
image_sudo=True
user_key_name=elasticluster
# You can generate the keypair with the command: `gcloud compute config-ssh`
user_key_private=~/.ssh/google_compute_engine
user_key_public=~/.ssh/google_compute_engine.pub


# Bring all of the elements together to define a cluster called "slurm"

[cluster/slurm]
cloud=google-cloud
login=google-login
setup=slurm
security_group=default

# I'm using an example configuration file that was meant for Xenial.  I don't know if
# this matters, but why mess with it?

image_id=ubuntu-1604-xenial-v20210119

ssh_to=frontend
frontend_nodes=1
compute_nodes=2


# frontend isn't doing much, so make it small because I'm cheap
[cluster/slurm/frontend]
flavor=n1-standard-1

# backends are doing shit.
[cluster/slurm/compute]
flavor=n1-highcpu-32

